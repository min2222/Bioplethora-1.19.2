buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: "org.spongepowered.mixin"
apply plugin: "eclipse"
apply plugin: "maven-publish"

group = project.group
archivesBaseName = project.modid
version = project.mod_version

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: "${mappings_channel}", version: "${mappings_version}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            arg "-mixin.config=${modid}.mixins.json"
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            arg "-mixin.config=${modid}.mixins.json"
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            arg "-mixin.config=${modid}.mixins.json"
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', "${modid}", '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets {
    main.resources.srcDirs 'src/generated/resources'
}

mixin {
    add sourceSets.main, "${modid}.refmap.json"
    config "${modid}.mixins.json"

    debug.verbose = true
    debug.export = true

    quiet
}

repositories {
    flatDir {
         dir 'libs'
    }
    maven {
	name = "Jaackson Maven"
        url = "https://maven.jaackson.me"
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
        content {
                includeGroupByRegex("software\\.bernie.*")
                includeGroup("com.eliotlash.mclib")
        }
    }
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
	name = "BlameJared Maven"
        url "https://maven.blamejared.com"
    }
    maven {
	name = "Shedaniel Maven"
        url "https://maven.shedaniel.me/"
    }
    maven {
	name = "IllusiveC4 Maven"
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        name = "Github"
        url = "https://jitpack.io"
    }
    maven {
        name "KosmX's maven"
        url 'https://maven.kosmx.dev/'
    }
    mavenCentral()
}

dependencies {
    
	// Base
	minecraft("net.minecraftforge:forge:${mc_version}-${forge_version}")
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
	implementation("org.jetbrains:annotations:23.0.0")

	// Dependencies
	implementation fg.deobf("software.bernie.geckolib:geckolib-forge-1.20.1:${geckolib_version}")
	implementation("com.eliotlash.mclib:mclib:20")
	//implementation fg.deobf("net.yeoxuhang.biomeapireforged:biomeapireforged-1.20.1:1.0.0")
	
	// Extras
	
	compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}"))
    compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}"))
    runtimeOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}"))

	implementation fg.deobf("curse.maven:just-enough-resources-jer-240630:${jer_version}")
	implementation fg.deobf("curse.maven:just-enough-effect-descriptions-jeed-532286:${jeed_version}")

	implementation fg.deobf("curse.maven:appleskin-248787:${appleskin_version}")
	
	implementation fg.deobf("curse.maven:the-one-probe-245211:${top_version}")
	implementation fg.deobf("curse.maven:jade-324717:${jade_version}")

	implementation fg.deobf("curse.maven:configured-457570:${configured_version}")
	implementation fg.deobf("curse.maven:catalogue-459701:${catalogue_version}")
	
	compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}:api")
	runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")

	runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")
	compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}:api")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_name,
                "Specification-Vendor"    : "AquTheSeal, Sajevius, Meme Man",
                "Specification-Version"   : project.mod_version,
                "Implementation-Title"    : project.mod_name,
                "Implementation-Version"  : project.mod_version,
                "Implementation-Vendor"   : "AquTheSeal, Sajevius, Meme Man",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs" : "${modid}.mixins.json"
        ])
    }
}

processResources {
	exclude '**/.cache/'

	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

jar.finalizedBy('reobfJar')